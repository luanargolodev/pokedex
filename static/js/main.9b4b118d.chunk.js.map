{"version":3,"sources":["components/PokemonThumbnails.js","App.js","index.js"],"names":["PokemonThumbnail","str","id","name","image","type","style","className","src","alt","charAt","toUpperCase","substr","App","useState","allPokemons","setAllPokemons","loadMore","setLoadMore","getAllPokemons","createPokemon","a","result","forEach","pokemon","fetch","res","json","data","currentList","next","console","log","results","useEffect","map","index","sprites","other","dream_world","front_default","types","Button","onClick","color","variant","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA0BeA,EAxBU,SAAC,GAA6B,IAGlCC,EAHMC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACpCC,EAAK,0BAAsBD,GASjC,OACE,sBAAKE,UAAWD,EAAhB,UACE,qBAAKC,UAAU,SAAf,SACE,uCAAUL,OAEZ,qBAAKK,UAAU,gBAAgBC,IAAKJ,EAAOK,IAAKN,IAChD,sBAAKI,UAAU,iBAAf,UACE,8BAdaN,EAcGE,EAbD,kBAARF,EACF,GAEFA,EAAIS,OAAO,GAAGC,cAAgBV,EAAIW,OAAO,MAW5C,2CAAcP,Y,QCiCPQ,MAhDf,WAAgB,IAAD,EACyBC,mBAAS,IADlC,mBACNC,EADM,KACOC,EADP,OAEmBF,mBAAS,8CAF5B,mBAENG,EAFM,KAEIC,EAFJ,KAIPC,EAAc,uCAAG,qBAOZC,EAPY,SAAAC,EAAA,6DAOZD,EAPY,SAOEE,GACrBA,EAAOC,QAAP,uCAAe,WAAOC,GAAP,iBAAAH,EAAA,sEACKI,MAAM,qCAAD,OAAsCD,EAAQrB,OADxD,cACPuB,EADO,gBAEMA,EAAIC,OAFV,OAEPC,EAFO,OAIbZ,GAAe,SAAAa,GAAW,4BAAQA,GAAR,CAAqBD,OAJlC,2CAAf,wDARmB,SACHH,MAAMR,GADH,cACfS,EADe,gBAEFA,EAAIC,OAFF,cAEfC,EAFe,OAIrBV,EAAYU,EAAKE,MACjBC,QAAQC,IAAIJ,GAUZR,EAAcQ,EAAKK,SAfE,UAgBfF,QAAQC,IAAIjB,GAhBG,4CAAH,qDAuBpB,OAJAmB,qBAAU,WACRf,MACC,IAGD,sBAAKZ,UAAU,gBAAf,UACE,uDACA,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,gBAAf,SACGQ,EAAYoB,KAAI,SAACX,EAASY,GAAV,OACf,cAAC,EAAD,CACElC,GAAIsB,EAAQtB,GACZC,KAAMqB,EAAQrB,KACdC,MAAOoB,EAAQa,QAAQC,MAAMC,YAAYC,cACzCnC,KAAMmB,EAAQiB,MAAM,GAAGpC,KAAKF,MACvBiC,QAIX,cAACM,EAAA,EAAD,CAAQnC,UAAU,YAAYoC,QAAS,kBAAMxB,KAAkByB,MAAM,UAAUC,QAAQ,YAAvF,8BC3CRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9b4b118d.chunk.js","sourcesContent":["import React from 'react';\n\nconst PokemonThumbnail = ({id, name, image, type}) => {\n  const style = `thumb-container ${type}`;\n\n  const Capitalize = str => {\n    if (typeof str !== 'string') {\n      return '';\n    }\n    return str.charAt(0).toUpperCase() + str.substr(1);\n  }\n\n  return(\n    <div className={style}>\n      <div className=\"number\">\n        <small>#0{id}</small>\n      </div>\n      <img className=\"image-pokemon\" src={image} alt={name} />\n      <div className=\"detail-wrapper\">\n        <h3>{Capitalize(name)}</h3>\n        <small>Type: {type}</small>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonThumbnail;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport PokemonThumbnail from './components/PokemonThumbnails';\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n  const [allPokemons, setAllPokemons] = useState([]);\n  const [loadMore, setLoadMore] = useState('https://pokeapi.co/api/v2/pokemon?limit=20');\n\n  const getAllPokemons = async () => {\n    const res = await fetch(loadMore);\n    const data = await res.json();\n\n    setLoadMore(data.next);\n    console.log(data);\n\n    function createPokemon(result) {\n      result.forEach(async (pokemon) => {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`);\n        const data = await res.json();\n\n        setAllPokemons(currentList => [...currentList, data]);\n      })\n    }\n    createPokemon(data.results);\n    await console.log(allPokemons);\n  }\n\n  useEffect(() => {\n    getAllPokemons();\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <h1>Pok√©mon Evolution!</h1>\n      <div className=\"pokemon-container\">\n        <div className=\"all-container\">\n          {allPokemons.map((pokemon, index) => \n            <PokemonThumbnail \n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.sprites.other.dream_world.front_default}\n              type={pokemon.types[0].type.name}\n              key={index}\n            />\n          )}\n        </div>\n        <Button className=\"load-more\" onClick={() => getAllPokemons()} color=\"primary\" variant=\"contained\">Load more</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}